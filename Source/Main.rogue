using Plasmacore

Display( "Main" ).view = MainView()

#Plasmacore.show_fps = true

class MainView : View
  METHODS
    method on_start
      change_state( InitialState() )

    method on( e:PointerEvent )

    method on_draw

    method on_resize
      # Called when the Display.size changes

    method on_update
      # Called 60 times a second
endClass


class InitialState : State<<MainView>>
  PROPERTIES
    angle = Degrees(0)
    canvas = Canvas(33,33)

  METHODS
    method on_start
      # Called when this state becomes the active state
      #println "Hello World"

    method after_draw
      # This happens after the current view's on_draw()

    method on( e:KeyEvent )
      trace e

    method on( e:PointerEvent )
      if (e.is_press or e.is_release) trace e

    method on( e:TextEvent )
      trace e

    method on_draw
      # This happens before the current view's on_draw()
      Display.clear( Color.BLUE )
      Display.bounds.cropped(32).fill( Color.GREEN )
      #DefaultFont.anchor = Anchor.CENTER
      #DefaultFont.draw( "Hello World", Display.center )

      if (canvas.is_blank)
        Display.set_render_target( canvas )
        Display.clear( Color.RED )
        Box(0,0,32,32).fill( Color.YELLOW )
        #Box(0.5,511,1,1).fill( Color.YELLOW )
        SystemFont.anchor = Anchor.CENTER
        SystemFont.draw( "Testing", Display.center )
        Display.remove_render_target
      endIf

      #(Box( -32, -16, 64, 32 ).rotated( angle ) + Display.center).fill( Color.WHITE )
      #(Box( -32, -16, 64, 32 ).rotated( angle ) + Display.center).draw( Color.GREEN )
      ++angle

      canvas.draw( Display.center )

    method on_resize
      # Called when the Display.size changes

    method on_update
      # Called 60 times a second
endClass

