using Plasmacore
using Plasmacore::GG

Display( "Main" ).view = MainView()

class MainView : View
  PROPERTIES

  METHODS
    method on_start
      change_state( InitialState() )
      local gui = GameGUI()
      #add( button(Color.RED),    XY(132,116) )
      gui.add( (GGFiller.y / button("Alpha") / GGFiller.y(2) / button("Beta")/ GGFiller.y) + GGFiller.x + button("Gamma") )
      #add( GG::Button(Image(Color.RED,XY(64,32))) + GG::Button(Image(Color.YELLOW,XY(64,32))) )
      add( gui )

    method button( label:String )->GGButton
      return GGDefaultButton( label )

    method on( e:PointerEvent )
      if (e.is_press or e.is_move or e.is_release)
        #trace e.position
      endIf

    method on_draw
      Display.clear( Color.BLACK )
      DefaultFont.anchor = Anchor.CENTER
      DefaultFont.draw( "Hello World! \[f7] 0123456789", Display.center )

    method on_resize
      # Called when the Display.size changes

    method on_update
      # Called 60 times a second
endClass


class InitialState : State<<MainView>>
  PROPERTIES

  METHODS
    method on_start
      # Called when this state becomes the active state
      println "Hello World"

    method after_draw
      # This happens after the current view's on_draw()

    method on( e:PointerEvent )

    method on_draw
      # This happens before the current view's on_draw()

    method on_resize
      # Called when the Display.size changes

    method on_update
      # Called 60 times a second
endClass

