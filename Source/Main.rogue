using Plasmacore

Display( "Main" ).view = MainView()

class MainView : View
  METHODS
    method on_start
      change_state( InitialState() )

    method on( e:PointerEvent )

    method on_draw

    method on_resize
      # Called when the Display.size changes

    method on_update
      # Called 60 times a second
endClass


class InitialState : State<<MainView>>
  PROPERTIES
    model : Model

  METHODS
    method on_start
      # Called when this state becomes the active state
      println "Hello World"

      Display.projection_mode = ProjectionMode2DX( -320 )

      model = Model( Mesh.cube )
      model.position = XYZ(82,116,Display.z+16)
      model.scale = XYZ(32,16,16)

      model.add( Model( Mesh.cube ).set_position(0,-4,0) )

    method after_draw
      # This happens after the current view's on_draw()

    method on( e:KeyEvent )
      trace e

    method on( e:PointerEvent )
      if (e.is_press or e.is_release) trace e

    method on( e:TextEvent )
      trace e

    method on_draw
      # This happens before the current view's on_draw()
      Display.clear( Color.BLUE )
      DefaultFont.anchor = Anchor.CENTER
      DefaultFont.draw( "Hello World", Display.center )

      Box(50,100,64,32).fill(Color.YELLOW)

      model.draw

    method on_resize
      # Called when the Display.size changes

    method on_update
      # Called 60 times a second
      model.rotation = model.rotation.rotated(Angles.degrees(1,0,0))
      model.update
endClass

