uses Plasmacore
uses Box2D

Display( "Main" ).screen = MainScreen

#Plasmacore.show_fps = true

class MainScreen : Screen [singleton]
  PROPERTIES

  METHODS
    method on_start

      change_state( InitialState() )

    method on( e:PointerEvent )

    method on_draw

    method on_resize
      # Called when the Display.size changes

    method on_update
      # Called 60 times a second
endClass


class InitialState : State<<MainScreen>>
  PROPERTIES
    text = RichText()

  METHODS
    method on_start
      # Called when this state becomes the active state
      println "Hello World"

    method after_draw
      # This happens after the current screen's on_draw()

    method on( e:KeyEvent )
      trace e

    method on( e:PointerEvent )
      if (e.is_press or e.is_release) trace e

    method on( e:TextEvent )
      trace e

    method on_draw
      # This happens before the current screen's on_draw()
      Display.clear( Color.BLUE )
      Image( (DefaultFont.data as DefaultFontData).sheet_builder.texture ).draw( Display.center )
      DefaultFont.anchor = Anchor.CENTER
      #DefaultFont.draw( "Hello World", Display.center )
      DefaultFont.draw( "Hello", Display.at(0.5,0.5) )
      DefaultFont.draw( "Hello", Display.at(0.5,0.55), &max_width=70 )
      DefaultFont.draw( "Hello W", Display.at(0.5,0.6), &max_width=70 )
      DefaultFont.draw( "Hello Wo", Display.at(0.5,0.65), &max_width=70 )
      DefaultFont.draw( "Hello Wor", Display.at(0.5,0.7), &max_width=70 )
      DefaultFont.draw( "Hello Worl", Display.at(0.5,0.75), &max_width=70 )
      DefaultFont.draw( "Hello World", Display.at(0.5,0.8), &max_width=70 )

    method on_resize
      # Called when the Display.size changes

    method on_update
      # Called 60 times a second
endClass

