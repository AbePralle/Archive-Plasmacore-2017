module Plasmacore

class View : Canvas
  PROPERTIES
    window           : Window
    name             : String
    graphics         : Graphics
    logic            : ViewLogic
    pointer_position : XY
    pointer_exists   : Logical
    time_debt        : Real64
    last_update_time : Real64

  METHODS
    method init( window, name, logic )
      logic.view = this
      graphics = StarbrightGraphics( this )

    method draw
      logic.draw
      VisualLog.draw

    method handle( e:KeyEvent )
      logic.on( e )

    method handle( e:PointerEvent )
      if (pointer_exists)
        if (e.is_scroll)
          e.position = pointer_position
        else
          e.delta = e.position - pointer_position
          pointer_position = e.position
        endIf
      elseIf (not e.is_scroll)
        pointer_exists = true
        pointer_position = e.position
      endIf
      logic.handle( e )

    method update
      logic.update
      VisualLog.update

    method update_and_draw
      Graphics = this.graphics
      Graphics.begin_draw( this )

      local current_time = System.time
      time_debt += current_time - last_update_time
      last_update_time = current_time

      if (time_debt < 0 or time_debt > 1.0/10.0)
        # If there was more than a 1/10th second delay, assume some multitask or
        # I/O hangup caused the delay and don't worry about trying to make the
        # time up - just update a single frame's worth and draw.
        time_debt = 1.0 / 60.0
      endIf

      if (not logic.is_active) logic.is_active = true; logic.activate

      while (time_debt >= 1.0/60.0)
        time_debt -= 1.0/60.0
        update
      endWhile

      draw

      Graphics.end_draw
endClass

