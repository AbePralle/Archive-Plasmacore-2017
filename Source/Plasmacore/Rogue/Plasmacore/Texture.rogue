module Plasmacore

class Texture
  PROPERTIES
    name     : String
    id       : Int32    # id in loading Graphics context
    size     : XY       # In texels
    uv_size  : XY       # (1,1) in most cases
    graphics : Graphics
      # The graphics context this texture was created in; used by images
      # to reload the texture if drawn in a new context.


  METHODS
    method init( name )
      graphics = Graphics

    method height->Int32 [macro]
      this.size.y

    method uv_height->Real64 [macro]
      this.uv_size.y

    method uv_width->Real64 [macro]
      this.uv_size.x

    method width->Int32 [macro]
      this.size.x
endClass


class TextureManager [singleton]
  PROPERTIES
    loaders = Table<<String,Function(Texture)>>()
      # Texture loader by texure name

  METHODS
    method load( texture:Texture )
      local loader = loaders[ texture.name ]
      if (loader)
        loader( texture )
        return
      endIf

      # Default load
      local filepath = Plasmacore.find_asset( texture.name )
      if (not filepath)
        println "No such texture: " + texture.name
        return
      endIf

      Graphics.load_texture( texture, File(filepath) )

endClass


