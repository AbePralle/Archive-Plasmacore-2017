$include "Graphics"

ImageCompiler()

class ImageCompiler
  PROPERTIES
    images      = String[]
    info_path   = "ImageInfo.json"
    output_path = "CompiledImages"
    show_usage  : Logical

  METHODS
    method init
      process_command_line_arguments

      if (show_usage)
        println @|Plasmacore Image Compiler
                 |
                 |USAGE
                 |  imagecompiler [--info=filepath] [--output=filepath] image-files-or-folders
        System.exit 1
      endIf

      local filepaths = String[]
      forEach (filepath in images)
        collect_images( filepath, filepaths )
      endForEach

      println "# image".pluralize(filepaths.count)
      forEach (filepath in filepaths) println "  " + filepath

      #local bitmap = Bitmap( File("a.png") )
      #local bm2 = Bitmap( bitmap, Box(bitmap.size).cropped(1) )
      #bm2.save_as_png( File("a2.png") )

    method process_command_line_arguments
      forEach (i of System.command_line_arguments)
        local arg = System.command_line_arguments[i]
        local value : String
        if (arg.contains('='))
          value = arg.after_first( '=' )
          arg = arg.before_first( '=' )
        endIf
        which (arg)
          case "--info":   info_path = value
          case "--output": output_path = value
          others
            if (arg.begins_with("--"))
              println "Unrecognized argument '$'." (arg)
              show_usage = true
            else
              images.add( arg )
            endIf
        endWhich
      endForEach

    method collect_images( filepath:String, validated_filepaths:String[] )
      if (not File.exists(filepath))
        println ''No such image "$".'' (filepath)
      endIf

      if (File.is_folder(filepath))
        forEach (contained_filepath in File.listing(filepath))
          collect_images( "$/$" (filepath,contained_filepath), validated_filepaths )
        endForEach
      else
        validated_filepaths.add( filepath )
      endIf


endClass

