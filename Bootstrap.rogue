Bootstrap()

class Bootstrap
  PROPERTIES
    REPO   = "https://github.com/AbePralle/Plasmacore.git"
    BRANCH = "master"

  METHODS
    method init
      configure
      run

    method configure
      # Read override values from Local.mk
      if (File.exists("Local.mk"))
        local printed_header = false
        forEach (line in LineReader(File("Local.mk")))
          if (line.contains("="))
            local name  = line.before_first('=').trimmed
            local value = line.after_first('=').trimmed
            local p = type_info.find_property( name )
            if (p)
              if (not printed_header)
                printed_header = true
                println "Local.mk overrides:"
              endIf
              println "$ = $" (name,value)
              type_info.set_property( this, p, Value(value) )
            endIf
          endIf
        endForEach
      endIf

    method run
      # Don't overwrite existing installation
      if (File.exists("Source") or File.exists("Platforms"))
        println "Plasmacore is already installed. Use 'rogo update' to update it."
        return
      endIf

      if (not File.exists("Build/Update/Plasmacore"))
        println File.fix_slashes( "Cloning Plasmacore -> Build/Update/Plasmacore" )
        File.create_folder( "Build/Update" )
        run File.fix_slashes( "git clone $ Build/Update/Plasmacore"(REPO) )
      endIf
      run "cd Build/Update/Plasmacore && git checkout $ && git pull" (BRANCH)

      local files = Files( "Build/Update/Plasmacore", "**" )
      if (File.exists("README.md")) files.remove( "Build/Update/Plasmacore/README.md" )
      File.sync_from( files, ".", &keep_unused, &verbose )

      System.run @|rogo version Installed
endClass

routine run( cmd:String, &silent )
  forEach (line in LineReader(cmd))
    if (not silent) print( "> " ).println( line )
    if (0 != System.run(line)) throw Error( "Build error." )
  endForEach
endRoutine

