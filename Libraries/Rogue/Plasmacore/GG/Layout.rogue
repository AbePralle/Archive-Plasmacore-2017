module Plasmacore::GG

class Layout : Component
  PROPERTIES
    bounds         : Box
    components     = Component[]
    content_anchor = Anchor.CENTER : Anchor

  METHODS
    method init

    method init( @bounds )

    method add( component:Component, options=null:Value )->this
      components.add( component )
      return this

    method dispatch( e:KeyEvent )
      forEach (component in components)
        component.handle( e )
        if (e.is_consumed) return
      endForEach

    method dispatch( e:PointerEvent )
      forEach (component in components)
        component.handle( e )
        if (e.is_consumed) return
      endForEach

    method dispatch_draw
      (forEach in components).handle_draw

    method dispatch_update
      (forEach in components).handle_update

    method set_content_anchor( @content_anchor )->this
      return this

    method update_layout( bounds )
      (forEach in components).update_layout  # TODO: measure then lay out
endClass

class AbsoluteLayout : Layout
endClass

class HorizontalLayout : Layout
  METHODS
    method operator+( right_component:Component )->Component
      return add( right_component )
endClass

class VerticalLayout : Layout
  METHODS
    method operator/( bottom_component:Component )->Component
      return add( bottom_component )
endClass
