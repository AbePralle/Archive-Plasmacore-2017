class Object [native]
  METHODS
    method init_object
      noAction

    method init
      noAction

    method get_property( name:String )->Value
      return introspector[ name ]

    method get_property<<$PropertyType>>( name:String )->$PropertyType
      forEach (i in 0..<property_count)
        if (property_name(i) == name)
          if ($PropertyType isReference)
            return native( "*((RogueObject**)(((RogueByte*)$this) + $this->type->property_offsets[$i]))" )->Object as $PropertyType
          else
            return native( "*(($($PropertyType)*)(((RogueByte*)$this) + $this->type->property_offsets[$i]))" )->$PropertyType
          endIf
        endIf
      endForEach

      local default_value : $PropertyType
      return default_value

    method hash_code->Int32
      return object_id->Int32

    method introspector->Introspector
      return Introspector( this )

    method object_id->Int64
      local addr : Int64
      native "$addr = (RogueInt64)(intptr_t)$this;"
      return addr

    method operator==( other:Object )->Logical
      return this is other

    method property_count->Int32
      return native( "$this->type->property_count" )->Int32

    method property_name( index:Int32 )->String
      return native( "Rogue_literal_strings[$this->type->property_name_indices[$index]]" )->String

    method set_properties( value:Value )->this
      introspector.set( value )
      return this

    method set_property<<$PropertyType>>( name:String, value:$PropertyType )->this
      forEach (i in 0..<property_count)
        if (property_name(i) == name)
          if ($PropertyType isReference)
            native( "*((RogueObject**)(((RogueByte*)$this) + $this->type->property_offsets[$i])) = $value;" )
          else
            native( "*(($($PropertyType)*)(((RogueByte*)$this) + $this->type->property_offsets[$i])) = $value;" )
          endIf
          return this
        endIf
      endForEach

      return this

    method set_property( name:String, value:Value )->this
      introspector.set( name, value )
      return this

    method to->String
      return "($ 0x$)" (type_name, object_id.to_hex_string)

    method to->Value
      return introspector->Value

    method to->ValueList
      return @[ this->Value ]

    method to->ValueTable
      return introspector->Value

    method type_info->TypeInfo
      native @|return RogueType_type_info( $this->type );

endClass

