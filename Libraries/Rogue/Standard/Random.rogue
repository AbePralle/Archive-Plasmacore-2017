#------------------------------------------------------------------------------
#  Random
#------------------------------------------------------------------------------
class Random [singleton]
  GLOBAL METHODS
    method next_state( state:Int64 )->Int64 [macro]
      # Kludge until Int64 literals work in compiler
      $if ("C++") native "((THIS->state * 0x5DEECe66dLL + 11LL) & 0xFFFFffffFFFFLL)"

  PROPERTIES
    state : Int64

  METHODS
    method init
      reset( (System.time * 1000)->Int64 )

    method init( seed:Int64 )
      reset( seed )

    method advance_state()->Int64
      state = next_state( state )
      return state

    method reset( state )
      advance_state

    method next_real64->Real64
      return (advance_state->Real64 + 1.0) / 281474976710657.0

    method next_real64( low:Real64, high:Real64 )->Real64
      return (next_real64 * (high-low)) + low

    method next_int32->Int32
      return (next_real64 * (2.0^31))->Int32

    method next_int32( limit:Int32 )->Int32
      if (limit == 0) return 0
      return next_int32 % limit

    method next_int32( low:Int32, high:Int32 )->Int32
      return next_int32( (high-low)+1 ) + low

    method next_logical->Logical
      return (next_real64 > 0.5)

endClass

