class Tuple <<$T1>> (_1:$T1) [compound]
  METHODS
    method to->String
      return "($)" (_1)

    method hash_code->Int32
      return _1.hash_code

    method operator== (other:Tuple<<$T1>>)->Logical
      if (_1 != other._1) return false
      return true

    method operator< (other:Tuple<<$T1>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      return false

    method cloned->this
      return Tuple<<$T1>>(_1)
endClass


class Tuple <<$T1,$T2>> (_1:$T1,_2:$T2) [compound]
  METHODS
    method to->String
      return "($,$)" (_1,_2)

    method hash_code->Int32
      return _1.hash_code ~ _2.hash_code

    method operator== (other:Tuple<<$T1,$T2>>)->Logical
      if (_1 != other._1) return false
      if (_2 != other._2) return false
      return true

    method operator< (other:Tuple<<$T1,$T2>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      if (_2 < other._2) return true
      if (_2 > other._2) return false
      return false

    method cloned->this
      return Tuple<<$T1,$T2>>(_1,_2)
endClass


class Tuple <<$T1,$T2,$T3>> (_1:$T1,_2:$T2,_3:$T3) [compound]
  METHODS
    method to->String
      return "($,$,$)" (_1,_2,_3)

    method hash_code->Int32
      return _1.hash_code ~ _2.hash_code ~ _3.hash_code

    method operator== (other:Tuple<<$T1,$T2,$T3>>)->Logical
      if (_1 != other._1) return false
      if (_2 != other._2) return false
      if (_3 != other._3) return false
      return true

    method operator< (other:Tuple<<$T1,$T2,$T3>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      if (_2 < other._2) return true
      if (_2 > other._2) return false
      if (_3 < other._3) return true
      if (_3 > other._3) return false
      return false

    method cloned->this
      return Tuple<<$T1,$T2,$T3>>(_1,_2,_3)
endClass


class Tuple <<$T1,$T2,$T3,$T4>> (_1:$T1,_2:$T2,_3:$T3,_4:$T4) [compound]
  METHODS
    method to->String
      return "($,$,$,$)" (_1,_2,_3,_4)

    method hash_code->Int32
      return _1.hash_code ~ _2.hash_code ~ _3.hash_code ~ _4.hash_code

    method operator== (other:Tuple<<$T1,$T2,$T3,$T4>>)->Logical
      if (_1 != other._1) return false
      if (_2 != other._2) return false
      if (_3 != other._3) return false
      if (_4 != other._4) return false
      return true

    method operator< (other:Tuple<<$T1,$T2,$T3,$T4>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      if (_2 < other._2) return true
      if (_2 > other._2) return false
      if (_3 < other._3) return true
      if (_3 > other._3) return false
      if (_4 < other._4) return true
      if (_4 > other._4) return false
      return false

    method cloned->this
      return Tuple<<$T1,$T2,$T3,$T4>>(_1,_2,_3,_4)
endClass


class Tuple <<$T1,$T2,$T3,$T4,$T5>> (_1:$T1,_2:$T2,_3:$T3,_4:$T4,_5:$T5) [compound]
  METHODS
    method to->String
      return "($,$,$,$,$)" (_1,_2,_3,_4,_5)

    method hash_code->Int32
      return _1.hash_code ~ _2.hash_code ~ _3.hash_code ~ _4.hash_code ~ _5.hash_code

    method operator== (other:Tuple<<$T1,$T2,$T3,$T4,$T5>>)->Logical
      if (_1 != other._1) return false
      if (_2 != other._2) return false
      if (_3 != other._3) return false
      if (_4 != other._4) return false
      if (_5 != other._5) return false
      return true

    method operator< (other:Tuple<<$T1,$T2,$T3,$T4,$T5>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      if (_2 < other._2) return true
      if (_2 > other._2) return false
      if (_3 < other._3) return true
      if (_3 > other._3) return false
      if (_4 < other._4) return true
      if (_4 > other._4) return false
      if (_5 < other._5) return true
      if (_5 > other._5) return false
      return false

    method cloned->this
      return Tuple<<$T1,$T2,$T3,$T4,$T5>>(_1,_2,_3,_4,_5)
endClass


class Tuple <<$T1,$T2,$T3,$T4,$T5,$T6>> (_1:$T1,_2:$T2,_3:$T3,_4:$T4,_5:$T5,_6:$T6) [compound]
  METHODS
    method to->String
      return "($,$,$,$,$,$)" (_1,_2,_3,_4,_5,_6)

    method hash_code->Int32
      return _1.hash_code ~ _2.hash_code ~ _3.hash_code ~ _4.hash_code ~ _5.hash_code ~ _6.hash_code

    method operator== (other:Tuple<<$T1,$T2,$T3,$T4,$T5,$T6>>)->Logical
      if (_1 != other._1) return false
      if (_2 != other._2) return false
      if (_3 != other._3) return false
      if (_4 != other._4) return false
      if (_5 != other._5) return false
      if (_6 != other._6) return false
      return true

    method operator< (other:Tuple<<$T1,$T2,$T3,$T4,$T5,$T6>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      if (_2 < other._2) return true
      if (_2 > other._2) return false
      if (_3 < other._3) return true
      if (_3 > other._3) return false
      if (_4 < other._4) return true
      if (_4 > other._4) return false
      if (_5 < other._5) return true
      if (_5 > other._5) return false
      if (_6 < other._6) return true
      if (_6 > other._6) return false
      return false

    method cloned->this
      return Tuple<<$T1,$T2,$T3,$T4,$T5,$T6>>(_1,_2,_3,_4,_5,_6)
endClass


class Tuple <<$T1,$T2,$T3,$T4,$T5,$T6,$T7>> (_1:$T1,_2:$T2,_3:$T3,_4:$T4,_5:$T5,_6:$T6,_7:$T7) [compound]
  METHODS
    method to->String
      return "($,$,$,$,$,$,$)" (_1,_2,_3,_4,_5,_6,_7)

    method hash_code->Int32
      return _1.hash_code ~ _2.hash_code ~ _3.hash_code ~ _4.hash_code ~ _5.hash_code ~ _6.hash_code ~ _7.hash_code

    method operator== (other:Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7>>)->Logical
      if (_1 != other._1) return false
      if (_2 != other._2) return false
      if (_3 != other._3) return false
      if (_4 != other._4) return false
      if (_5 != other._5) return false
      if (_6 != other._6) return false
      if (_7 != other._7) return false
      return true

    method operator< (other:Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      if (_2 < other._2) return true
      if (_2 > other._2) return false
      if (_3 < other._3) return true
      if (_3 > other._3) return false
      if (_4 < other._4) return true
      if (_4 > other._4) return false
      if (_5 < other._5) return true
      if (_5 > other._5) return false
      if (_6 < other._6) return true
      if (_6 > other._6) return false
      if (_7 < other._7) return true
      if (_7 > other._7) return false
      return false

    method cloned->this
      return Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7>>(_1,_2,_3,_4,_5,_6,_7)
endClass


class Tuple <<$T1,$T2,$T3,$T4,$T5,$T6,$T7,$T8>> (_1:$T1,_2:$T2,_3:$T3,_4:$T4,_5:$T5,_6:$T6,_7:$T7,_8:$T8) [compound]
  METHODS
    method to->String
      return "($,$,$,$,$,$,$,$)" (_1,_2,_3,_4,_5,_6,_7,_8)

    method hash_code->Int32
      return _1.hash_code ~ _2.hash_code ~ _3.hash_code ~ _4.hash_code ~ _5.hash_code ~ _6.hash_code ~ _7.hash_code ~ _8.hash_code

    method operator== (other:Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7,$T8>>)->Logical
      if (_1 != other._1) return false
      if (_2 != other._2) return false
      if (_3 != other._3) return false
      if (_4 != other._4) return false
      if (_5 != other._5) return false
      if (_6 != other._6) return false
      if (_7 != other._7) return false
      if (_8 != other._8) return false
      return true

    method operator< (other:Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7,$T8>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      if (_2 < other._2) return true
      if (_2 > other._2) return false
      if (_3 < other._3) return true
      if (_3 > other._3) return false
      if (_4 < other._4) return true
      if (_4 > other._4) return false
      if (_5 < other._5) return true
      if (_5 > other._5) return false
      if (_6 < other._6) return true
      if (_6 > other._6) return false
      if (_7 < other._7) return true
      if (_7 > other._7) return false
      if (_8 < other._8) return true
      if (_8 > other._8) return false
      return false

    method cloned->this
      return Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7,$T8>>(_1,_2,_3,_4,_5,_6,_7,_8)
endClass


class Tuple <<$T1,$T2,$T3,$T4,$T5,$T6,$T7,$T8,$T9>> (_1:$T1,_2:$T2,_3:$T3,_4:$T4,_5:$T5,_6:$T6,_7:$T7,_8:$T8,_9:$T9) [compound]
  METHODS
    method to->String
      return "($,$,$,$,$,$,$,$,$)" (_1,_2,_3,_4,_5,_6,_7,_8,_9)

    method hash_code->Int32
      return _1.hash_code ~ _2.hash_code ~ _3.hash_code ~ _4.hash_code ~ _5.hash_code ~ _6.hash_code ~ _7.hash_code ~ _8.hash_code ~ _9.hash_code

    method operator== (other:Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7,$T8,$T9>>)->Logical
      if (_1 != other._1) return false
      if (_2 != other._2) return false
      if (_3 != other._3) return false
      if (_4 != other._4) return false
      if (_5 != other._5) return false
      if (_6 != other._6) return false
      if (_7 != other._7) return false
      if (_8 != other._8) return false
      if (_9 != other._9) return false
      return true

    method operator< (other:Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7,$T8,$T9>>)->Logical
      if (_1 < other._1) return true
      if (_1 > other._1) return false
      if (_2 < other._2) return true
      if (_2 > other._2) return false
      if (_3 < other._3) return true
      if (_3 > other._3) return false
      if (_4 < other._4) return true
      if (_4 > other._4) return false
      if (_5 < other._5) return true
      if (_5 > other._5) return false
      if (_6 < other._6) return true
      if (_6 > other._6) return false
      if (_7 < other._7) return true
      if (_7 > other._7) return false
      if (_8 < other._8) return true
      if (_8 > other._8) return false
      if (_9 < other._9) return true
      if (_9 > other._9) return false
      return false

    method cloned->this
      return Tuple<<$T1,$T2,$T3,$T4,$T5,$T6,$T7,$T8,$T9>>(_1,_2,_3,_4,_5,_6,_7,_8,_9)
endClass
