class LineReader : Reader<<String>>
  PROPERTIES
    source : Reader<<Character>>
    next   : String
    buffer = StringBuilder()
    prev   : Character

  METHODS
    method init( source )
      next = prepare_next

    method init( file:File )
      init( file.character_reader )

    method init( string:String )
      init( string.reader )

    method close->this
      source.close
      return this

    method has_another->Logical
      return next

    method peek->String
      return next

    method prepare_next->String
      if (not source.has_another) return null

      prev = 0

      buffer.clear
      while (source.has_another)
        local ch = source.read
        if (ch == '\n') prev = '\n'; return buffer->String
        buffer.print( ch )
      endWhile

      return buffer->String

    method read->String
      local result = next
      next = prepare_next
      ++position
      return result

    method reset->this
      seek( 0 )
      return this

    method seek( n:Int32 )->this
      if (n < 0) n = 0

      if (n < position)
        source.reset
        position = 0
        next = prepare_next
      endIf

      while (n > position)
        read
      endWhile

      return this

endClass

