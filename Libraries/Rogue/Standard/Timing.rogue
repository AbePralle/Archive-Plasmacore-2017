class Stopwatch
  PROPERTIES
    start_time = System.time: Real64
    stop_time  : Real64?

  METHODS
    method init( &stopped )
      if (stopped) stop_time = start_time

    method elapsed->Real64
      if (stop_time.exists)
        return (stop_time.value - start_time)
      else
        return (System.time - start_time)
      endIf

    method is_running->Logical
      return not stop_time.exists

    method is_stopped->Logical
      return stop_time.exists

    method restart->this
      start_time = System.time
      stop_time = null
      return this

    method start->this
      # Starts if currently stopped; otherwise no effect.
      if (stop_time.exists)
        start_time = System.time - elapsed
        stop_time = null
      endIf
      return this

    method stop->this
      # Stops if currently running; otherwise no effect.
      if (not stop_time.exists) stop_time = System.time
      return this

    method operator+( delta_time:Real64 )->this
      # Increase the elapsed interval of this stopwatch.
      start_time -= delta_time
      return this

    method operator-( delta_time:Real64 )->this
      # Decrease the elapsed interval of this stopwatch.
      start_time += delta_time
      return this

    method to->String
      return StringBuilder().print( elapsed, 2 ).print( " seconds" )->String

endClass


class Timer
  PROPERTIES
    duration                 : Real64
    start_time = System.time : Real64
    stop_time                : Real64?

  METHODS
    method init( duration, &expired )
      if (expired)
        start_time -= duration
        while (not is_expired) start_time -= (duration - elapsed).or_larger(0.001)
      endIf

    method elapsed->Real64
      if (stop_time.exists)
        return (stop_time.value - start_time)
      else
        return (System.time - start_time)
      endIf

    method is_expired->Logical
      return elapsed >= duration

    method operator+( delta_time:Real64 )->this
      # Increase the elapsed interval of this timer.
      start_time += delta_time
      return this

    method operator-( delta_time:Real64 )->this
      # Decrease the elapsed interval of this timer.
      start_time -= delta_time
      return this

    method remaining->Real64
      return duration - elapsed

    method restart->this
      start_time = System.time
      stop_time = null
      return this

    method restart( duration )->this
      start_time = System.time
      stop_time = null
      return this

    method start->this
      # Starts if currently stopped; otherwise no effect.
      if (stop_time.exists)
        start_time = System.time - elapsed
        stop_time = null
      endIf
      return this

    method stop->this
      # Stops if currently running; otherwise no effect.
      if (not stop_time.exists) stop_time = System.time
      return this

    method to->String
      return StringBuilder().print( elapsed, 2 ).print( '/' ).print( duration, 2 ).print( " seconds" )->String

endClass

